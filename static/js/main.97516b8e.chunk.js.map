{"version":3,"sources":["lib/Rect.css.js","lib/Rect.jsx","App.css.js","App.jsx","index.js"],"names":["Scene","styled","div","props","size","Rect","transition","front","right","back","left","RectFace","bgColor","RectFaceEmpty","bdColor","id","children","index","emptyBgColor","emptyBdColor","rectFaces","Array","isArray","slice","i","length","push","defaultProps","undefined","Wrap","TitleWrap","h2","Title","span","RectWrap","RectContent","PrevNextButton","button","PrevButton","NextButton","DotsWrap","Dot","active","AuthorMarkLeftArrow","AuthorMarkName","AuthorMark","a","AuthorMarkWrap","footer","RectDemo","useState","currentFace","setCurrentFace","setSlideIndex","num","onClick","target","rel","href","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.97516b8e.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst Scene = styled.div`\n  position: relative;\n  perspective: 1000px;\n  max-width: ${props => props.size || '0'}px;\n  height: 100%;\n  margin: 0 auto;\n  overflow: hidden;\n`;\n\nconst Rect = styled.div`\n  transform-style: preserve-3d;\n  transition: transform ${props => props.transition || '0'}s;\n  width: 100%;\n  height: 100%;\n\n  transform: translateZ(-${props => props.size / 2 || '0'}px)\n    rotateY(\n      ${props => {\n        if (props.front) {\n          return 0;\n        }\n        if (props.right) {\n          return -90;\n        }\n        if (props.back) {\n          return -180;\n        }\n        if (props.left) {\n          return -270;\n        }\n        return 0;\n      }}deg\n    );\n`;\n\nconst RectFace = styled.div`\n  position: absolute;\n  text-align: center;\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  background-color: ${props => props.bgColor || '#fff'};\n\n  transform: rotateY(\n      ${props => {\n        if (props.front) {\n          return 0;\n        }\n        if (props.right) {\n          return 90;\n        }\n        if (props.back) {\n          return 180;\n        }\n        if (props.left) {\n          return 270;\n        }\n        return 0;\n      }}deg\n    )\n    translateZ(${props => props.size / 2 || '0'}px);\n`;\n\nconst RectFaceEmpty = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n  background-color: ${props => props.bgColor || '#fff'};\n  border: 3px solid ${props => props.bdColor || '#000'};\n`;\n\nexport default { Scene, Rect, RectFace, RectFaceEmpty };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport S from './Rect.css';\n\nconst Rect = ({\n  children,\n  index,\n  size,\n  transition,\n  emptyBgColor,\n  emptyBdColor,\n}) => {\n  let rectFaces = [];\n  const emptyFace = id => (\n    <S.RectFaceEmpty key={id} bgColor={emptyBgColor} bdColor={emptyBdColor}>\n      Empty\n    </S.RectFaceEmpty>\n  );\n\n  if (children) {\n    rectFaces = Array.isArray(children)\n      ? [...children].slice(0, 4)\n      : [children];\n  }\n\n  for (let i = 0; rectFaces.length < 4; i += 1) {\n    rectFaces.push(emptyFace(i));\n  }\n\n  return (\n    <S.Scene size={size}>\n      <S.Rect\n        front={index === 'front'}\n        right={index === 'right'}\n        back={index === 'back'}\n        left={index === 'left'}\n        size={size}\n        transition={transition}\n      >\n        <S.RectFace front size={size}>\n          {rectFaces[0]}\n        </S.RectFace>\n        <S.RectFace right size={size}>\n          {rectFaces[1]}\n        </S.RectFace>\n        <S.RectFace back size={size}>\n          {rectFaces[2]}\n        </S.RectFace>\n        <S.RectFace left size={size}>\n          {rectFaces[3]}\n        </S.RectFace>\n      </S.Rect>\n    </S.Scene>\n  );\n};\n\nRect.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  index: PropTypes.string,\n  size: PropTypes.number,\n  transition: PropTypes.number,\n  emptyBgColor: PropTypes.string,\n  emptyBdColor: PropTypes.string,\n};\n\nRect.defaultProps = {\n  children: undefined,\n  index: 'front',\n  size: 500,\n  transition: 1,\n  emptyBgColor: '#fff',\n  emptyBdColor: '#000',\n};\n\nexport default Rect;\n","import styled from 'styled-components';\n\nconst Wrap = styled.div`\n  position: relative;\n  margin-bottom: 50px;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding-bottom: 10vh;\n  box-sizing: border-box;\n`;\n\nconst TitleWrap = styled.h2`\n  text-align: center;\n  padding: 20px 0;\n  position: relative;\n  border-bottom: 3px dashed '#000';\n`;\n\nconst Title = styled.span`\n  fotn-size: 25px;\n  padding-bottom: 10px;\n`;\n\nconst RectWrap = styled.div`\n  width: 100%;\n  height: 350px;\n  overflow: hidden;\n  padding: 30px 40px 0 40px;\n  box-sizing: border-box;\n  margin: 0 auto;\n  position: relative;\n`;\n\nconst RectContent = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 3px solid #000;\n  box-sizing: border-box;\n`;\n\nconst PrevNextButton = styled.button`\n  cursor: pointer;\n  position: absolute;\n  top: 50%;\n  padding: 16px;\n  color: '#000';\n  font-weight: 28px;\n  transition: 0.6s;\n  border-radius: 0 3px 3px 0;\n`;\n\nconst PrevButton = styled(PrevNextButton)`\n  left: 0;\n`;\n\nconst NextButton = styled(PrevNextButton)`\n  right: 0;\n  border-radius: 3px 0 0 3px;\n`;\n\nconst DotsWrap = styled.div`\n  text-align: center;\n  padding: 30px;\n`;\n\nconst Dot = styled.span`\n  cursor: pointer;\n  height: 15px;\n  width: 15px;\n  margin: 0 2px;\n  border-radius: 50%;\n  display: inline-block;\n  transition: background-color 0.6s ease;\n\n  background-color: ${props => (props.active ? '#1e1e1e' : '#bbb')};\n`;\n\nconst AuthorMarkLeftArrow = styled.span`\n  display: inline-block;\n  width: 0px;\n  height: 0px;\n  border-top: 25px solid transparent;\n  border-bottom: 25px solid transparent;\n  border-right: 25px solid #0e0e0e;\n  border-left: 25px solid transparent;\n  transition: 0.15s;\n`;\nconst AuthorMarkName = styled.span`\n  background-color: #0e0e0e;\n  height: 50px;\n  padding: 0 2rem;\n  display: inline-flex;\n  align-items: center;\n  transition: 0.15s;\n`;\nconst AuthorMark = styled.a`\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  color: #eee;\n\n  &:hover {\n    ${AuthorMarkLeftArrow} {\n      border-right: 25px solid #aa1e1e;\n    }\n    ${AuthorMarkName} {\n      background-color: #aa1e1e;\n    }\n  }\n`;\n\nconst AuthorMarkWrap = styled.footer`\n  position: fixed;\n  display: inline;\n  bottom: 3rem;\n  right: 0;\n\n  @media screen and (max-height: 500px) {\n    & {\n      display: none;\n    }\n  }\n`;\n\nexport default {\n  Wrap,\n  TitleWrap,\n  Title,\n  RectWrap,\n  RectContent,\n  PrevButton,\n  NextButton,\n  DotsWrap,\n  Dot,\n  AuthorMarkLeftArrow,\n  AuthorMarkName,\n  AuthorMark,\n  AuthorMarkWrap,\n};\n","import React, { useState } from 'react';\nimport Rect from 'lib/Rect';\nimport S from './App.css';\n\nconst RectDemo = () => {\n  const [currentFace, setCurrentFace] = useState(0);\n  const faces = ['face', 'right', 'back', 'left'];\n\n  const nextSlide = () => {\n    setCurrentFace((currentFace + 1) % 4);\n  };\n\n  const prevSlide = () => {\n    setCurrentFace(currentFace - 1 >= 0 ? currentFace - 1 : 3);\n  };\n\n  const setSlideIndex = num => () => {\n    setCurrentFace(num % 4);\n  };\n\n  return (\n    <S.Wrap>\n      <S.TitleWrap>\n        <S.Title>React 3D Rect Demo</S.Title>\n      </S.TitleWrap>\n\n      <S.RectWrap>\n        <Rect index={faces[currentFace]} transition={0.5}>\n          <S.RectContent>FRONT</S.RectContent>\n          <S.RectContent>RIGHT</S.RectContent>\n          <S.RectContent>BACK</S.RectContent>\n          <S.RectContent>LEFT</S.RectContent>\n        </Rect>\n        <S.PrevButton onClick={prevSlide}>&#10094;</S.PrevButton>\n        <S.NextButton onClick={nextSlide}>&#10095;</S.NextButton>\n      </S.RectWrap>\n\n      <S.DotsWrap>\n        <S.Dot active={currentFace === 0} onClick={setSlideIndex(0)} />\n        <S.Dot active={currentFace === 1} onClick={setSlideIndex(1)} />\n        <S.Dot active={currentFace === 2} onClick={setSlideIndex(2)} />\n        <S.Dot active={currentFace === 3} onClick={setSlideIndex(3)} />\n      </S.DotsWrap>\n\n      <S.AuthorMarkWrap>\n        <S.AuthorMark\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          href=\"https://github.com/hseoy/react-3d-square\"\n        >\n          <S.AuthorMarkLeftArrow />\n          <S.AuthorMarkName>Yunseo Hwang</S.AuthorMarkName>\n        </S.AuthorMark>\n      </S.AuthorMarkWrap>\n    </S.Wrap>\n  );\n};\n\nexport default RectDemo;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}