{"version":3,"sources":["lib/Square.css.js","lib/Square.jsx","App.css.js","App.jsx","index.js"],"names":["Scene","styled","div","props","size","Square","transition","front","right","back","left","SquareFace","bgColor","SquareFaceEmpty","bdColor","id","children","index","emptyBgColor","emptyBdColor","squareFaces","Array","isArray","slice","i","length","push","defaultProps","undefined","Wrap","TitleWrap","h2","Title","span","SquareWrap","SquareContent","PrevNextButton","button","PrevButton","NextButton","DotsWrap","Dot","active","SquareDemo","useState","currentFace","setCurrentFace","setSlideIndex","num","onClick","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.b9b4b4a8.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst Scene = styled.div`\n  position: relative;\n  perspective: 1000px;\n  max-width: ${props => props.size || '0'}px;\n  height: 100%;\n  margin: 0 auto;\n  overflow: hidden;\n`;\n\nconst Square = styled.div`\n  transform-style: preserve-3d;\n  transition: transform ${props => props.transition || '0'}s;\n  width: 100%;\n  height: 100%;\n\n  transform: translateZ(-${props => props.size / 2 || '0'}px)\n    rotateY(\n      ${props => {\n        if (props.front) {\n          return 0;\n        }\n        if (props.right) {\n          return -90;\n        }\n        if (props.back) {\n          return -180;\n        }\n        if (props.left) {\n          return -270;\n        }\n        return 0;\n      }}deg\n    );\n`;\n\nconst SquareFace = styled.div`\n  position: absolute;\n  text-align: center;\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  background-color: ${props => props.bgColor || '#fff'};\n\n  transform: rotateY(\n      ${props => {\n        if (props.front) {\n          return 0;\n        }\n        if (props.right) {\n          return 90;\n        }\n        if (props.back) {\n          return 180;\n        }\n        if (props.left) {\n          return 270;\n        }\n        return 0;\n      }}deg\n    )\n    translateZ(${props => props.size / 2 || '0'}px);\n`;\n\nconst SquareFaceEmpty = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n  background-color: ${props => props.bgColor || '#fff'};\n  border: 3px solid ${props => props.bdColor || '#000'};\n`;\n\nexport default { Scene, Square, SquareFace, SquareFaceEmpty };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport S from './Square.css';\n\nconst Square = ({\n  children,\n  index,\n  size,\n  transition,\n  emptyBgColor,\n  emptyBdColor,\n}) => {\n  let squareFaces = [];\n  const emptyFace = id => (\n    <S.SquareFaceEmpty key={id} bgColor={emptyBgColor} bdColor={emptyBdColor}>\n      Empty\n    </S.SquareFaceEmpty>\n  );\n\n  if (children) {\n    squareFaces = Array.isArray(children)\n      ? [...children].slice(0, 4)\n      : [children];\n  }\n\n  for (let i = 0; squareFaces.length < 4; i += 1) {\n    squareFaces.push(emptyFace(i));\n  }\n\n  return (\n    <S.Scene size={size}>\n      <S.Square\n        front={index === 'front'}\n        right={index === 'right'}\n        back={index === 'back'}\n        left={index === 'left'}\n        size={size}\n        transition={transition}\n      >\n        <S.SquareFace front size={size}>\n          {squareFaces[0]}\n        </S.SquareFace>\n        <S.SquareFace right size={size}>\n          {squareFaces[1]}\n        </S.SquareFace>\n        <S.SquareFace back size={size}>\n          {squareFaces[2]}\n        </S.SquareFace>\n        <S.SquareFace left size={size}>\n          {squareFaces[3]}\n        </S.SquareFace>\n      </S.Square>\n    </S.Scene>\n  );\n};\n\nSquare.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  index: PropTypes.string,\n  size: PropTypes.number,\n  transition: PropTypes.number,\n  emptyBgColor: PropTypes.string,\n  emptyBdColor: PropTypes.string,\n};\n\nSquare.defaultProps = {\n  children: undefined,\n  index: 'front',\n  size: 500,\n  transition: 1,\n  emptyBgColor: '',\n  emptyBdColor: '',\n};\n\nexport default Square;\n","import styled from 'styled-components';\n\nconst Wrap = styled.div`\n  position: relative;\n  margin-bottom: 50px;\n`;\n\nconst TitleWrap = styled.h2`\n  text-align: center;\n  padding: 20px 0;\n  position: relative;\n  border-bottom: 3px dashed '#000';\n`;\n\nconst Title = styled.span`\n  fotn-size: 25px;\n  padding-bottom: 10px;\n`;\n\nconst SquareWrap = styled.div`\n  width: 100%;\n  height: 350px;\n  overflow: hidden;\n  padding: 30px 40px 0 40px;\n  box-sizing: border-box;\n  margin: 0 auto;\n  position: relative;\n`;\n\nconst SquareContent = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 3px solid #000;\n  box-sizing: border-box;\n`;\n\nconst PrevNextButton = styled.button`\n  cursor: pointer;\n  position: absolute;\n  top: 50%;\n  padding: 16px;\n  color: '#000';\n  font-weight: 28px;\n  transition: 0.6s;\n  border-radius: 0 3px 3px 0;\n`;\n\nconst PrevButton = styled(PrevNextButton)`\n  left: 0;\n`;\n\nconst NextButton = styled(PrevNextButton)`\n  right: 0;\n  border-radius: 3px 0 0 3px;\n`;\n\nconst DotsWrap = styled.div`\n  text-align: center;\n  padding: 30px;\n`;\n\nconst Dot = styled.span`\n  cursor: pointer;\n  height: 15px;\n  width: 15px;\n  margin: 0 2px;\n  border-radius: 50%;\n  display: inline-block;\n  transition: background-color 0.6s ease;\n\n  background-color: ${props => (props.active ? '#1e1e1e' : '#bbb')};\n`;\n\nexport default {\n  Wrap,\n  TitleWrap,\n  Title,\n  SquareWrap,\n  SquareContent,\n  PrevButton,\n  NextButton,\n  DotsWrap,\n  Dot,\n};\n","import React, { useState } from 'react';\nimport Square from 'lib/Square';\nimport S from './App.css';\n\nconst SquareDemo = () => {\n  const [currentFace, setCurrentFace] = useState(0);\n  const faces = ['face', 'right', 'back', 'left'];\n\n  const nextSlide = () => {\n    setCurrentFace((currentFace + 1) % 4);\n  };\n\n  const prevSlide = () => {\n    setCurrentFace(currentFace - 1 >= 0 ? currentFace - 1 : 3);\n  };\n\n  const setSlideIndex = num => () => {\n    setCurrentFace(num % 4);\n  };\n\n  return (\n    <S.Wrap>\n      <S.TitleWrap>\n        <S.Title>Square Demo</S.Title>\n      </S.TitleWrap>\n\n      <S.SquareWrap>\n        <Square index={faces[currentFace]} transition={0.5}>\n          <S.SquareContent>FRONT</S.SquareContent>\n          <S.SquareContent>RIGHT</S.SquareContent>\n          <S.SquareContent>BACK</S.SquareContent>\n          <S.SquareContent>LEFT</S.SquareContent>\n        </Square>\n        <S.PrevButton onClick={prevSlide}>&#10094;</S.PrevButton>\n        <S.NextButton onClick={nextSlide}>&#10095;</S.NextButton>\n      </S.SquareWrap>\n\n      <S.DotsWrap>\n        <S.Dot active={currentFace === 0} onClick={setSlideIndex(0)} />\n        <S.Dot active={currentFace === 1} onClick={setSlideIndex(1)} />\n        <S.Dot active={currentFace === 2} onClick={setSlideIndex(2)} />\n        <S.Dot active={currentFace === 3} onClick={setSlideIndex(3)} />\n      </S.DotsWrap>\n    </S.Wrap>\n  );\n};\n\nexport default SquareDemo;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}